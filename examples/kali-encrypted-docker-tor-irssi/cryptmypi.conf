###############################################################################
## cryptmypi profile ##########################################################


# EXAMPLE OF A ENCRYPTED KALI CONFIGURATION WITH SSH ACCESS (dropbear and sshd)
# THAT IS PRE-CONFIGURED A DOCKER CONTAINER ACCESSIBLE THROUGH tor-irssi COMMAND
#
#   Will create an encrypted Kali system:
#   - during boot the encryption password will be prompted
#   - with ssh server (available after boot)
#       The id_rsa.pub public key will be added to authorized_keys
#
#   Some optional hooks are defined on stage:
#   - "optional-sys-rootpassword" that sets root password
#   - "optional-sys-docker" that installs and enables docker service
#
#   stage1-otherscript.sh clones a repository and create minimal .irssi configuration.
#   IMPORTANT! You should check the stage1-otherscript.sh script for the changes needed...
#   INSTRUCTIONS ARE AVAILABLE ON HOW TO CREATE / REGISTER A CERTIFICATE
#   FOR TOR ACCESS TO FREENODE


# General settings ------------------------------------------------------------
# You need to choose a kernel compatible with your RPi version.
#   Kali RPi images name its kernels:
#   - Re4son+ is for armv6 devices (ie. RPi1, RPi0, and RPi0w)
#   - v7+ and v8+ are for the 32bit and 64bit armv7 devices (ie. RPi 3)
#   - l+ is mostly for the RPi4 since one can have 4GB or 8GB versions
#     The l in l+ actually means lpae (Large Physical Address Extensions)
export _KERNEL_VERSION_FILTER="v8+"


# HOSTNAME
#   Each element of the hostname must be from 1 to 63 characters long and
#   the entire hostname, including the dots, can be at most 253
#   characters long.  Valid characters for hostnames are ASCII(7) letters
#   from a to z, the digits from 0 to 9, and the hyphen (-)
export _HOSTNAME="kali-encrypted-docker-tor-irssi"


# BLOCK DEVICE
#   The SD card or USD SD card reader block device
#   - USB drives will show up as the normal /dev/sdb, /dev/sdc, etc.
#   - MMC/SDcards may show up the same way if the card reader is USB-connected.
#   - Internal card readers normally show up as /dev/mmcblk0, /dev/mmcblk1, ...
#   You can use the lsblk command to get an easy quick view of all block
#   devices on your system at a given moment.
export _BLKDEV="/dev/mmcblk0"


# LUKS ENCRYPTION -------------------------------------------------------------
## Encryption Cypher
export _LUKSCIPHER="aes-cbc-essiv:sha256"

## Encryption Password
export _LUKSPASSWD="luks_password"

## Stage2 regenerate luks uuid
# A value of yes generates a new luks uuid for deployment
export _NEWLUKSUUID="no"

## Encryption Extra
# On rpi0-1-2-3 you may want to reduce the required memory to unlock
#  _LUKSEXTRA="--pbkdf-memory 131072"
export _LUKSEXTRA="--key-size 256"


# LINUX IMAGE FILE ------------------------------------------------------------
export _IMAGEURL=https://kali.download/arm-images/kali-2022.4/kali-linux-2022.4-raspberry-pi-arm64.img.xz
export _IMAGESHA="60e33582746bb25d87092e842398e1f946ff3cd3678743856f01d8bd3b43946a"


# PACKAGE ACTIONS -------------------------------------------------------------
# If a lighter kali image is desired start with the below purge list
#export _PKGSPURGE="kali-desktop-xfce kali-root-login xserver-xorg-video-fbdev xserver-xorg-input-evdev xserver-xorg-input-synaptics"
export _PKGSPURGE=""
export _PKGSINSTALL=""


# MINIMAL SSH CONFIG ----------------------------------------------------------
#   Keyfile to be used to access the system remotely through ssh.
#   Its public key will be added to the system's root .ssh/authorized_keys
export _SSH_LOCAL_KEYFILE="$_USER_HOME/.ssh/id_rsa"


###############################################################################
## Stage 1 Settings ###########################################################

# Custom Stage1 Profile
#   Check functions/stage1profiles.fns for reference. You may instruct hooks
#   here or you may call one predefined stage1profile functions.
# Optional: if stage1_hooks function is not defined, a prompt will be displayed
stage1_hooks(){
    myhooks "stage1"
}


# Optional stage 1 hooks
#   If declared, this function is called during stage1 build by the
#   stage1-runoptional hook.
#
#   Optional function: can be omitted.
stage1_optional_hooks(){
    myhooks "optional-sys-rootpassword"
    myhooks "optional-sys-docker"
}


# OTHERSCRIPT settings --------------------------------------------------------
# Hooks
#   stage1-otherscript
#       Attempts to run a setup script on the chrooted system

## Name of the setup script file to be run (path relative to config directory)
# Optional variable (default: "stage1-otherscript.sh")
_STAGE1_OTHERSCRIPT='stage1-otherscript.sh'


# ROOT PASSWORD CHANGER settings ----------------------------------------------
# Hooks
#   optional-sys-rootpassword
#       Changes the system root password

## The new root password
export _ROOTPASSWD="root_password"
